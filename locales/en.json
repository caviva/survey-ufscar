{
    "appTitle": "Survey on Best Practices in Software Testing",
    "logout": "Exit",
    "stepOne": {
        "title": "General Information",
        "fullName": "Full Name",
        "gender": "Gender",
        "email": "Email",
        "country": "Country",
        "jobTitle": "Job Title",
        "educationLevel": "Education Level",
        "age": "Age",
        "yearsOfExperience": "Years of Experience in Software Testing",
        "register": "Next"
    },
    "genders": {
        "male": "Male",
        "female": "Female",
        "other": "Other"
    },
    "tcle": {
        "hide": "Hide Term of Free and Informed Consent",
        "show": "Show Term of Free and Informed Consent",
        "content": "Introduction",
        "introduction": "Introduction",
        "introductionContent": "I agree to participate in the non-invasive studies carried out by the researchers, as part of the research activities \"Characterization and classification of good test cases: best practices, essential features, and tools\".\n\nDuring this process, concepts about quality in test cases and associated practices will be presented. I understand that during the activities I will assimilate these concepts and apply this knowledge throughout the stages. The researchers will carry out the study consisting of the collection, analysis, and reporting of data from the responses developed. I understand that I am not required to provide information about my answers in the activity and that I can request the removal of my results from the experiment at any time. I understand that there will be no additional credit or benefit for participating in these studies. I also understand that when data is collected and analyzed, my name will be removed from the data and will not be used at any time during the analysis or when the results are presented.",
        "confidentiality": "Confidentiality",
        "confidentialityContent": "All information collected in this study is confidential and my name will not be identified at any time. Likewise, I undertake not to communicate this content, to keep confidential the practices presented that are part of the experiment, and to respect the declared rules and licenses.",
        "benefits": "Benefits and Withdrawal Freedom",
        "benefitsContent": "I understand that the benefits I will receive from this study are limited to learning the material that is distributed and taught to fulfill the research process, regardless of whether or not I participate in these studies, but that the researchers hope to learn more about quality practices in test cases and the benefits that these studies bring to the context of Software Engineering. I understand that I am free to ask questions at any time or request that any information related to me not be included in the study. I understand that my participation is of my own free will with the sole objective of contributing to the advancement and development of techniques and processes for Software Engineering.",
        "accept": "I have read and agree to the Term of Free and Informed Consent"
    },
    "stepTwo": {
        "title": "Best Practices Evaluation",
        "instructions": "Next, a set of practices related to the quality of test cases is presented. Provide your opinion on each one considering if you Strongly Agree, Agree, are Neutral, Disagree, or Strongly Disagree with each of them. Additionally, if desired, it is also possible to include an observation for each practice. If you have questions about what a particular practice entails, the 'Show More' link provides a brief description of the practice in question. There are 40 practices in total.",
        "show": "Show More",
        "hide": "Hide",
        "evaluation": "Evaluation",
        "observation": "Observation",
        "submit": "Next",
        "back": "Back"
    },
    "evaluations": {
        "agree": "Agree",
        "neutral": "Neutral",
        "disagree": "Disagree"
    },
    "practices": {
        "bp1": {
            "title": "Atomic Specification of Test Cases",
            "description": "A good test case should be specific or atomic, focusing on one requirement aspect. Test cases within a suite must be independent, ensuring accurate and reliable results. Independence avoids false positives or negatives and allows for better test coverage by concentrating on specific software aspects.",
            "category": "Common Sense",
            "domain": "Project Management",
            "use": "Independence"
        },
        "bp2": {
            "title": "Complete Independence of Test Cases",
            "description": "Test cases should be independent to provide flexibility in scheduling and reduce maintenance time and cost. Techniques like cloning support independence through adaptability and reusability. An overview of dependencies aids in understanding which test cases to execute based on feature changes.",
            "category": "Common Sense",
            "domain": "Project Management",
            "use": "Separation of activities"
        },
        "bp3": {
            "title": "Coverage of Normal and Exceptional Flows",
            "description": "Good test cases should cover both standard and exceptional flows to thoroughly test the applicationâ€™s functionality. This approach identifies potential bugs or errors in the system.",
            "category": "Common Sense",
            "domain": "Quality and Maintainability",
            "use": "Coverage"
        },
        "bp4": {
            "title": "Boundary Values Analysis",
            "description": "Test cases must perform boundary value analysis by obtaining input values at the edges of an input domain, identifying potential errors at the boundaries.",
            "category": "Common Sense",
            "domain": "Quality and Maintainability",
            "use": "Coverage"
        },
        "bp5": {
            "title": "Complete Modularity of Test Cases",
            "description": "Test cases should be well-modularized reference documentation. Well-written, well-commented test code following a consistent style is highly valued.",
            "category": "Common Sense",
            "domain": "Quality and Maintainability",
            "use": "Documentation"
        },
        "bp6": {
            "title": "Detailed Analysis of Size and Complexity",
            "description": "Most test cases should be small to avoid difficulties in understanding and maintenance. Smaller test cases enhance focus, conciseness, and reusability, leading to more efficient testing processes.",
            "category": "Common Sense",
            "domain": "Quality and Maintainability",
            "use": "Size/Complexity"
        },
        "bp7": {
            "title": "Complex Design for Error Detection",
            "description": "While significant test cases may be necessary to detect problematic errors, a balance is crucial. Increased complexity in a test case can lead to difficulties in understanding and maintaining.",
            "category": "Common Sense",
            "domain": "Quality and Maintainability",
            "use": "Design"
        },
        "bp8": {
            "title": "Complete Maintenance of Test Code",
            "description": "Test code must be designed with maintainability, prioritizing good design principles such as modularization and separation of concerns.",
            "category": "Common Sense",
            "domain": "Quality and Maintainability",
            "use": "Design"
        },
        "bp9": {
            "title": "Complete Traceability of Test Cases",
            "description": "Traceability links between test code, requirements, and source code should be maintained for improved team efficiency and bug detection.",
            "category": "Common Sense",
            "domain": "Project Management",
            "use": "Knowledge management"
        },
        "bp10": {
            "title": "Strict Use of Performance and Security Testing",
            "description": "Different tests, including performance and security tests, are essential for evaluating system performance and identifying security vulnerabilities.",
            "category": "Common Sense",
            "domain": "Performance and Security",
            "use": "Performance/Security"
        },
        "bp11": {
            "title": "Regular Review of Test Cases",
            "description": "Test cases should be regularly reviewed and updated, especially when requirements change.",
            "category": "Common Sense",
            "domain": "Project Management",
            "use": "Review/Update"
        },
        "bp12": {
            "title": "Clear Understanding of Test Cases",
            "description": "Test cases should be clear, unambiguous, and simple to understand. Involving the test designer in formulating acceptance criteria can enhance the clarity of test cases.",
            "category": "Common Sense",
            "domain": "Quality and Maintainability",
            "use": "Clarity"
        },
        "bp13": {
            "title": "Structured Coverage of Testing Process",
            "description": "Different integration testing approaches like top-down and bottom-up should be applied based on specific requirements under test.",
            "category": "Common Sense",
            "domain": "Quality and Maintainability",
            "use": "Coverage"
        },
        "bp14": {
            "title": "Complete Assurance of Test Code Quality",
            "description": "Metrics like code coverage are crucial for quality assurance of unit tests.",
            "category": "Common Sense",
            "domain": "Quality and Maintainability",
            "use": "Quality assurance"
        },
        "bp15": {
            "title": "Proper Utilization of Code Coverage",
            "description": "While code coverage is a crucial metric in software testing, it alone does not ensure testing effectiveness. Test quality, encompassing factors like documentation, management, maintainability, and reusability, is crucial in complementing code coverage.",
            "category": "Literature Supported",
            "domain": "Quality and Maintainability",
            "use": "Quality assurance"
        },
        "bp16": {
            "title": "Required Utilization of Missing Tests",
            "description": "Utilizing code coverage to identify gaps in test coverage and guide additional test creation is vital. Code coverage metrics offer insights into untested code areas, helping prioritize the creation of new tests to enhance coverage.",
            "category": "Literature Supported",
            "domain": "Project Management",
            "use": "Quality assurance"
        },
        "bp17": {
            "title": "Efficient Utilization of Code Coverage",
            "description": "Achieving higher code coverage does not automatically equate to better error detection. While extensive coverage is essential, it does not guarantee identifying all errors. Comprehensive testing practices and targeting specific fault patterns are crucial for thorough error detection.",
            "category": "Literature Supported",
            "domain": "Project Management",
            "use": "Quality assurance"
        },
        "bp18": {
            "title": "Small Generation Footprint",
            "description": "Ensuring each test case has a small footprint, executing minimal code, is crucial for efficient testing. A small footprint reduces complexity and enhances focus, aiding in effective issue identification and isolation.",
            "category": "Literature Supported",
            "domain": "Quality and Maintainability",
            "use": "Size/Complexity"
        },
        "bp19": {
            "title": "Complete Prioritization of Test Cases Design",
            "description": "Prioritizing the design of test cases to cover diverse requirements is more critical than focusing solely on code coverage. This approach ensures the system meets desired functionality, usability, and performance criteria beyond code-centric considerations.",
            "category": "Literature Supported",
            "domain": "Quality and Maintainability",
            "use": "Design"
        },
        "bp20": {
            "title": "Responsible Addition of Maintenance",
            "description": "Adding test cases covering fixed bugs during maintenance is advisable to prevent regression. Regular test case maintenance improves software quality, reliability, and overall performance.",
            "category": "Literature Supported",
            "domain": "Project Management",
            "use": "Review/Update"
        },
        "bp21": {
            "title": "Suitable Utilization of Test Assertions",
            "description": "Test assertions are invaluable for detecting subtle errors by explicitly stating expected behavior and comparing it during execution. This formal analysis enhances the fault-detecting ability of testing methods.",
            "category": "Literature Supported",
            "domain": "Quality and Maintainability",
            "use": "Design"
        },
        "bp22": {
            "title": "Responsible Addition of Debugging Comments",
            "description": "Including comments detailing common errors and possible causes in the test code aids in debugging failures. Comments serve as documentation for future reference, contributing to efficient debugging and code maintenance.",
            "category": "Literature Supported",
            "domain": "Quality and Maintainability",
            "use": "Design"
        },
        "bp23": {
            "title": "Deterministic Design of Results",
            "description": "A good test case should be designed for deterministic results, avoiding flakiness. Precise and unambiguous test cases and well-defined acceptance criteria ensure consistent outcomes.",
            "category": "Literature Supported",
            "domain": "Quality and Maintainability",
            "use": "Design"
        },
        "bp24": {
            "title": "Complete Avoidance of Side Effects",
            "description": "Test cases in a suite should not have side effects to maintain the reliability and repeatability of the testing process. Avoiding side effects involves careful design without reliance on shared resources.",
            "category": "Literature Supported",
            "domain": "Quality and Maintainability",
            "use": "Design"
        },
        "bp25": {
            "title": "Suitable Utilization of Labels and Categories",
            "description": "Employing labels or categories facilitates selective execution of specific test sets. This organizational approach allows for efficient prioritization and execution based on criteria like test type, priority, or execution time.",
            "category": "Literature Supported",
            "domain": "Project Management",
            "use": "Organizational structure"
        }
    },
    "stepThree": {
        "title": "Evaluation of Best Practices",
        "instructions": "Next, a set of practices related to the quality of test cases is presented along with the category, the domain it belongs to, and the use where it can be mainly framed. Choose the level of relevance of each practice regarding its category, domain, and use. Additionally, if desired, it is also possible to include an observation for each practice.",
        "evaluationCategory": "Level of relevance whit Category",
        "evaluationDomain": "Level of relevance wiht Domain",
        "evaluationUse": "Level of relevance wiht Use",
        "observation": "Observation",
        "submit": "Next",
        "categoryName": "Category",
        "domainName": "Domain",
        "useName": "Use"
    },
    "stepFour": {
        "title": "Priorization of Best Practices",
        "instructions": "Next, a set of practices related to the quality of test cases is presented in random order. Drag and order the practices according to the level of priority you consider.",
        "submit": "Next"
    },
    "evaluationsRelev": {
        "veryLow": "Very Low",
        "low": "Low",
        "moderate": "Moderate",
        "high": "High",
        "veryHigh": "Very High"
    },
    "stepFive": {
        "title": "Tools for Practices",
        "knowTool": "Do you know any testing tool that supports this practice?",
        "yes": "Yes",
        "submit": "Next"
    },
    "thankYou": {
        "title": "Thank You!",
        "message": "Thank you for completing the survey. We appreciate your feedback.",
        "homeButton": "Finish"
    }
}